{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAChCI,EAAML,SAASC,cAAc,mBAGnC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAZbH,EAAIY,UAAW,EAqCflB,EAAKmB,iBAAiB,UACtB,SAAiBC,GACfA,EAAGC,iBACH,IAAIC,EAAaC,OAAOpB,EAAMqB,OAC9B,MAAMC,EAAYF,OAAOnB,EAAKoB,OACxBE,EAAcH,OAAOlB,EAAOmB,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCpB,EAAcoB,EAAGL,GACdM,MAAK,EAACpB,SAAEA,EAAUS,MAAAY,MACjBC,QAAQC,IAAI,uBAAqBvB,QAAiBqB,MAAU,IAE7DG,OAAM,EAACxB,SAAEA,EAAUS,MAAAgB,MAClBH,QAAQC,IAAI,sBAAoBvB,QAAeyB,MAAU,IAE7DX,GAAcG,EACdnB,EAAIY,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst btn = document.querySelector('[type=\"submit\"]');\nbtn.disabled = false;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n// form.addEventListener('submit', getData);\n// function getData(ev) {\n//   ev.preventDefault();\n//   let delayInput = Number(delay.value);\n//   const stepInput = Number(step.value);\n//   const amountInput = Number(amount.value);\n\n//   for (let i = 1; i <= amountInput; i += 1) {\n//     createPromise(i, delayInput)\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delayInput += stepInput;\n//     btn.disabled = true;\n//   }\n// }\n\nform.addEventListener('submit', getData);\nfunction getData(ev) {\n  ev.preventDefault();\n  let delayInput = Number(delay.value);\n  const stepInput = Number(step.value);\n  const amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayInput += stepInput;\n    btn.disabled = true;\n  }\n}\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","disabled","addEventListener","ev","preventDefault","delayInput","Number","value","stepInput","amountInput","i","then","delay2","console","log","catch","delay3"],"version":3,"file":"03-promises.02966034.js.map"}